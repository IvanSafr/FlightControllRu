/*
  В этом примере показано, как настроить радиомодуль E22 на работу в качестве репитера (ретранслятора).
  Внимание!! этот код не проверен и может использоваться только для ознакомления. Работа данного примера не гарантируется!
*/

#include <SoftwareSerial.h>
#include "EBYTE22.h"

// Константы для Arduino

#define PIN_TX 2
#define PIN_RX 3
#define PIN_M0 4
#define PIN_M1 5
#define PIN_AX 6

// Константы для плат на ESP8266
/*
#define PIN_RX 14
#define PIN_TX 12
#define PIN_M0 5
#define PIN_M1 4
#define PIN_AX 13
*/



SoftwareSerial E22Serial(PIN_TX, PIN_RX, false);    // Создаем объект SoftwareSerial для соединения с модулем через программный UART

EBYTE22 E22(&E22Serial, PIN_M0, PIN_M1, PIN_AX);   // Создаем экземпляр класса EBYTE22

void setup() {
 Serial.begin(9600);                               // Устанавливаем соединение с компьютером (телефоном) для отладки.
 E22Serial.begin(9600);                            // Устанавливаем соединение с модулем (скорость 9600).
 delay(5000);
 
  // При инициализации и некоторых других операциях (применение настроек, установка ключа), модуль переходит в режим конфигурации, в этом режиме UART модуля работает только на скорости 9600.
  if(E22.init())                                  // Инициализируем модуль(конфигурируются выводы контроллера, считываются настройки модуля).
 {Serial.println("init OK");} else{
  Serial.println("init Error");}                  // Если что-то пошло не так, выводим сообщение об ошибке.
 
  // В случае ошибки, проверьте правильность подключения и перезапустите модуль с контроллером сбросом питания (кнопка сброса контроллера НЕ ПОМОГАЕТ).


  // Как это работает? Допустим у вас есть 3 модуля: "модуль1", "модуль2" и "репитер", который находится между ними.
  // Чтобы связь через репитер работала, адреса модулей "модуль1" и "модуль2" должны быть одинаковыми, а ID сети разными.
  // Предположим, ID "модуль1" - 5, а ID "модуль2" - 10.

  // Адрес модуля состоит из 2 байт, верхнего и нижнего, в режиме репитера адрес выполняет другую функцию - определения ID двух сторон.
  // Установим в верхний байт ID модуля "модуль1", а в нижний - модуля "модуль2".

E22.setAddressH(5);                    // Устанавливаем верхний байт адреса.
E22.setAddressL(10);                   // Устанавливаем нижний байт адреса.
E22.setRepeater(REPEATER_ENABLE);      // Включаем функцию репитера.
E22.writeSettings(TEMPORARY);          // Отправляем настройки в модуль (PERMANENT - применить и сохранить в ПЗУ, TEMPORARY - применить до потери питания)

  // С этого момента репитер должен начать работать в обе стороны. Все что отправляет модуль1, будет получено репитером и отправлено на модуль2 и наоборот.
  // Даже если модуль2 находится на небольшом расстоянии и способен "услышать" модуль1, он все равно не получит от него данные напрямую, так как у них разный "NET ID".
}

void loop() {

delay(100);

}
